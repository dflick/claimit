	byte[64] shastring;
	bytes shastring2;
	byte[64][] shaarr;
	bytes32[2][] shaarr2;

	// MetaCoin.deployed().addSha.call(web3.sha3("123456789012345"))
	// MetaCoin.deployed().addSha.call(web3.sha3("543210987654321"))
	function addSha(byte[64] sha) returns(byte[64]) {
		shastring = sha;
		uint i = shaarr.length;
		shaarr.push(shastring);
		return shastring;
	}

	// MetaCoin.deployed().getSha.call(0)
	function getSha(uint x) returns(byte[64]) {
		return shaarr[x];
	}

	function getShas() returns(byte[64][]) {
		return shaarr;
	}

	// MetaCoin.deployed().addSha2.call(web3.sha3("351827070599049"))
	// MetaCoin.deployed().addSha2.call(web3.sha3("123456789012345"))
	// MetaCoin.deployed().addSha2.call(web3.sha3("543210987654321"))
	function addSha2(bytes sha) returns(bytes) {
		shastring2 = sha;
		uint i = shaarr2.length;
		shaarr2.push(shastring2);
		return shastring2;
	}

	// MetaCoin.deployed().getSha2.call(0)
	function getSha2(uint x) returns(bytes) {
		return shaarr2[x];
	}

	/*
	** This does not work
	*/

//	function getShas2() returns(bytes[]) {
//		return shaarr2;
//	}